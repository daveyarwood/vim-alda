*alda.txt*	A Vim plugin for editing and playing Alda scores.

INTRODUCTION			               		*ft-alda* *alda*

Alda is a music programming language designed for musicians who don't
necessarily know how to program, as well as programmers who don't necessarily
know how to music.

For more information on Alda itself:

	http://github.com/alda-lang/alda

This plugin provides a nice environment for Vim users to work on Alda scores.

INDENTATION					*ft-alda-indent* *alda-indent*

(not yet implemented)

SYNTAX HIGHLIGHTING				*ft-alda-syntax* *alda-syntax*

Syntax highlighting is provided.

NAVIGATION					*ft-alda-sections* *alda-sections*
					    *ft-alda-navigation* *alda-navigation*

Special behavior for Vim |object-motions| is provided.

|[[| and |]]| navigate to the previous/next top-level thing, which could be an
instrument part, Clojure expression, variable definition, or comment block.

(A "top-level thing" here is any block of text starting with a non-whitespace
character, either at the top of the file or following an empty line.)

|[]| and |][| navigate between instrument parts, specifically. For this to
work properly, you must follow the convention of starting each instrument part
at the beginning of a line (no leading whitespace), and break the line after
the colon, e.g.:
>
	piano:
	  c d e f g

	clarinet:
	  e f g a b

FOLDING						*ft-alda-folding* *alda-folding*

Alda instrument parts, voices, etc. are foldable using the standard Vim
|fold-commands|. This relies on indentation, so it is recommended that you
follow the convention of indenting "blocks" of Alda code such as instrument
parts and voices, e.g.:

>
	piano:
	  V1:
	    c8 d e f g a b > c

	  V2:
	    e8 f g a b > c d e

	violin:
	  c4. e8~4 g4

PARSING A SCORE					*ft-alda-parse* *alda-parse*

There are commands available to parse the current Alda score file and show the
parsed representation of the score.

Note: You must save your score if you want your changes to be included in the
score to be parsed.

The parse results will be displayed in a vertical split with Clojure syntax
highlighting. `q` is mapped in this buffer as a convenient way to close it.

`:AldaParseFileIntoLispCode` displays the Clojure (alda.lisp) code that is
generated when the score is parsed. This is mapped to <localleader>l.

`:AldaParseFileIntoScoreMap` displays the map of score data that is produced
when the alda.lisp code is evaluated. This is mapped to <localleader>m.

PLAYING A SCORE					*ft-alda-play* *alda-play*

(not yet implemented)

ABOUT						*ft-alda-about* *alda-about*

Please feel free to file any issues or contribute patches via GitHub:

	http://github.com/daveyarwood/vim-alda

This plugin is distributed under the Vim license. See |license|.

Copyright Â© 2015 Dave Yarwood <dave.yarwood@gmail.com>

vim:tw=78:noet:sw=8:sts=8:ts=8:ft=help:norl:
